bits 32 ; assembling for the 32 bits architecture

; declare the EntryPoint (a label defining the very first instruction of the program)
global start        

; declare external functions needed by our program
extern exit, fopen, fprintf, fclose, scanf
import exit msvcrt.dll
import fopen msvcrt.dll
import fclose msvcrt.dll
import fprintf msvcrt.dll
import scanf msvcrt.dll
                          
                          


; our data is declared here (the variables needed by our program)
segment data use32 class=data
    
        file_name resb 20   
        access_mode db "w+", 0       
        file_descriptor dd -1 
        format db "%c", 0
         
      
   
; our code starts here
segment code use32 class=code
    start:
        
        
        mov eax,file_name
        
        push eax
        push dword [file_name]
        push dword format
        call [scanf]
        add esp, 4 * 2
        
        push dword access_mode
        push dword  file_name
        call [fopen]
        add esp, 4*2
        
        cmp eax, 0
        je end_program
        mov [file_descriptor], eax
        
        
        
        push dword file_name
        push dword format
        push dword [file_descriptor]
        call [fprintf]
        add esp, 4 * 3
                
        
        
        end_program:
            push dword [file_descriptor]
            call [fclose]
            add esp, 4
    
    ; exit(0)
        push    dword 0      
        call    [exit]       