     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 14                          a db 20
    14 00000001 1E00                        b dw 30
    15 00000003 0A000000                    c dd 10
    16 00000007 6400000000000000            d dq 100
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; d+c-b+(a-c)
    22                                          ;d-(a+b)+(c+c)
    23 00000000 8B1D[07000000]                  mov EBX, dword [d+0]
    24 00000006 A1[0B000000]                    mov EAX, dword [d+4] ;EAX:EBX = d
    25 0000000B F8                              clc; ;CF=0
    26                                          
    27 0000000C BA00000000                      mov EDX, 0
    28                                          ;mov DL, [c] 
    29 00000011 8A15[00000000]                  mov DL, [a]
    30 00000017 0215[01000000]                  add DL, [b] ;DL= a+b
    31                                          
    32 0000001D 29D3                            sub EBX, EDX
    33 0000001F 83D800                          sbb EAX,0 ;EAX:EBX = d-(a+b)
    34                                          
    35                                          
    36 00000022 BA00000000                      mov EDX, 0
    37 00000027 8A15[03000000]                  mov DL, [c] 
    38 0000002D B900000000                      mov ECX, 0
    39 00000032 668B0D[03000000]                mov CX, [c]
    40 00000039 01CA                            add EDX,ECX
    41 0000003B F8                              clc
    42 0000003C 01D3                            add EBX,EDX
    43 0000003E 83D000                          adc EAX, 0
    44                                          
    45                                      
    46                                          ; exit(0)
    47 00000041 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000043 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
