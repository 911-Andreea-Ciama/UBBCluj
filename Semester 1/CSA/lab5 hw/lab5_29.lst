     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ;A byte string S is given. Build the string D whose elements represent the sum of each two consecutive bytes of S.
    14 00000000 0A0203040506                s db 10, 2, 3, 4, 5, 6
    15                                      l equ $-s
    16 00000006 00<rept>                    d times l-1 db 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                      
    21 00000000 B905000000                      mov ecx, l-1 ;placing the length of d in ecx for the loop
    22 00000005 BE00000000                      mov esi, 0 ;keeping the position of s string in esi 
    23 0000000A E317                            jecxz End
    24                                          
    25                                          Repeat:
    26 0000000C 8A86[00000000]                      mov al, [s+esi] ;moving the element from s, position esi, in al
    27 00000012 8AB6[01000000]                      mov dh, [s+esi+1] ;moving the element from s, position esi+1, in dh
    28                                        
    29 00000018 00F0                                add al,dh ;al=al+dh
    30 0000001A 8886[06000000]                      mov [d+esi], al ;moving the result of the operation from al to d, on the position esi
    31                                              
    32 00000020 46                                  inc esi ;esi= esi+1
    33                                              
    34 00000021 E2E9                            loop Repeat
    35                                          End: ;end of program
    36                                    
    37                                      
    38                                          ; exit(0)
    39 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
